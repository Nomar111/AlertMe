local editgroup = O:AttachGroup(container, "Put in spellnames", false)
editgroup:SetRelativeWidth(0.4)
editgroup:SetAutoAdjustHeight(false)
editgroup:SetHeight(100)
local spellNames = {}
for spellName,_ in pairs(S.cache) do
	tinsert(spellNames, spellName)
end
local spellList = {}
local edit = A.Libs.AceGUI:Create('EditBox-AutoComplete')
edit:SetValueList(spellNames)
edit:SetButtonCount(20)
edit:SetLabel("Type in spell name")
edit:SetCallback("OnEnterPressed", function(widget, event, text)
		local grp = O:AttachGroup(O.scroll, _, false)
		grp:SetAutoAdjustHeight(false)
		grp:SetHeight(18)
		local icon_delete = O:AttachIcon(grp, "Interface\\AddOns\\AlertMe\\Media\\Textures\\delete.tga", 18)
		local label = O:AttachLabel(grp, text, GameFontHighlight, nil, 0.8)
		icon_delete:SetUserData("icon", icon_delete)
		icon_delete:SetUserData("label", label)
		icon_delete:SetUserData("group", grp)
		icon_delete:SetCallback("OnClick", function(widget, event, value)
		local grrp = widget:GetUserData("group")
		grrp:ReleaseChildren()
		grrp:Release()
							-- lbl:Release()
			-- local lbl = widget:GetUserData("label")
			-- lbl:Release()
			-- local ic = widget:GetUserData("icon")
			-- ic:Release()
		end)
	edit:SetText("")
end)
editgroup:AddChild(edit)
-- scrollcontainer
local scrollcontainer = O:AttachGroup(container, "Spells", false)
--scrollcontainer = A.Libs.AceGUI:Create("InlineGroup") -- "InlineGroup" is also good
scrollcontainer:SetRelativeWidth(0.6)
scrollcontainer:SetAutoAdjustHeight(false)
scrollcontainer:SetHeight(130.0) -- probably?
scrollcontainer:SetLayout("Fill") -- important!
-- create scrollframe
O.scroll = A.Libs.AceGUI:Create("ScrollFrame")
O.scroll:SetLayout("List")

scrollcontainer:AddChild(O.scroll)
VDT_AddData(O.scroll,"scroll")
VDT_AddData(container,"container")





	local dropdown = A.Libs.AceGUI:Create("Dropdown")
	O.test.dropdown = dropdown
	local path = P.events

	local key = "dd_value"
	dropdown:SetLabel("Label")
	dropdown:SetMultiselect(false)
	dropdown:SetWidth(200)
	dropdown:SetList(path.dd_items)
	dropdown:SetValue(path.dd_value)
	dropdown:SetCallback("OnValueChanged", function(self, callback, val) path.dd_value = val end);
	container:AddChild(dropdown)
	VDT_AddData(dropdown, "dd")


	function O:IconClick(widget, event, button)
		O.test.dropdown:AddItem(5,"FÃ¼nf")
		O.test.dropdown:SetValue(5)
		O.test.dropdown:Fire("OnValueChanged", 5)
		--P.events.dd_value = 1
	end




A.Libs.AceConfigRegistry:NotifyChange("AlertMeOptions")
A.Libs.AceConfigRegistry:RegisterCallback("ConfigTableChange", function(self)
	dprint(1,"fire")
	VDT_AddData(self,"self")
		A.Libs.AceConfigDialog.frame.apps["AlertMeOptions"] = true
		A.Libs.AceConfigDialog.frame:SetScript("OnUpdate", RefreshOnUpdate)
	--A.Libs.AceConfig:RegisterOptionsTable("AlertMeOptions", O.options)
end)
--MyLib.RegisterCallback(self, "eventName"[, method, [arg]])

RAID_CLASS_COLORS["SHAMAN"].colorStr = "ff0270dd"
RAID_CLASS_COLORS["SHAMAN"].r = 0.01
RAID_CLASS_COLORS["SHAMAN"].g = 0.44
RAID_CLASS_COLORS["SHAMAN"].b = 0.87




	<Include file="AceLocale-3.0\AceLocale-3.0.xml"/>
		<Include file="AceHook-3.0\AceHook-3.0.xml"/>

	<Include file="LibClassicDurations\LibClassicDurations.xml"/>
	<Script file="LibClassicCasterino-1.0\LibClassicCasterino.lua"/>
	<Script file="LibHealComm-4.0\LibHealComm-4.0.lua"/>
	<Script file="LibClassicSpellActionCount-1.0\LibClassicSpellActionCount-1.0.lua"/>
	<Script file="LibTotemInfo\GetTotemInfo.lua"/>

	<Include file="LibSharedMedia-3.0\lib.xml"/>
	<Script file="LibSimpleSticky\LibSimpleSticky.lua"/>
	<Include file='oUF\oUF.xml'/>
	<Include file='oUF_Plugins\oUF_Plugins.xml'/>
	<Include file="LibActionButton-1.0\LibActionButton-1.0.xml"/>
	<Script file="LibDataBroker\LibDataBroker-1.1.lua"/>
	<Script file="LibElvUIPlugin-1.0\LibElvUIPlugin-1.0.lua"/>
	<Include file="UTF8\UTF8.xml"/>
	<Include file="LibItemSearch-1.2\LibItemSearch-1.2.xml"/>
	<Include file="LibChatAnims\LibChatAnims.xml"/>
	<Include file="LibCompress\lib.xml"/>
	<Include file="LibBase64-1.0\lib.xml"/>
	<Script file="LibAnim\LibAnim.lua"/>
	<Script file="LibTranslit-1.0\LibTranslit-1.0.lua"/>
	<Script file="LibRangeCheck-2.0\LibRangeCheck-2.0.lua"/>
